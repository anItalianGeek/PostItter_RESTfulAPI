// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostItter_RESTfulAPI.DatabaseContext;

#nullable disable

namespace PostItter_RESTfulAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240829131133_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.ActiveUsersDto", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<string>("encodedToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("user_ref")
                        .HasColumnType("bigint");

                    b.HasKey("record_id");

                    b.ToTable("activeUsers");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.BlockedUserDTO", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<long>("blocked_user")
                        .HasColumnType("bigint");

                    b.Property<long>("user")
                        .HasColumnType("bigint");

                    b.HasKey("record_id");

                    b.ToTable("blockedUsers");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.ChatDto", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<long>("chat_id")
                        .HasColumnType("bigint");

                    b.Property<string>("chat_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("member_id")
                        .HasColumnType("bigint");

                    b.HasKey("record_id");

                    b.ToTable("chats");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.CommentDto", b =>
                {
                    b.Property<long>("comment_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("comment_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("post")
                        .HasColumnType("bigint");

                    b.Property<long>("user")
                        .HasColumnType("bigint");

                    b.HasKey("comment_id");

                    b.ToTable("comments");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.HashtagDto", b =>
                {
                    b.Property<long>("hashtag_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("hashtag_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("post_ref")
                        .HasColumnType("bigint");

                    b.HasKey("hashtag_id");

                    b.ToTable("hashtags");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.LikeDto", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<long>("post")
                        .HasColumnType("bigint");

                    b.Property<long>("user")
                        .HasColumnType("bigint");

                    b.HasKey("record_id");

                    b.ToTable("likes");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.MessageDto", b =>
                {
                    b.Property<long>("message_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("message_id"));

                    b.Property<long>("chat_ref")
                        .HasColumnType("bigint");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("file_url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("sender_id")
                        .HasColumnType("bigint");

                    b.HasKey("message_id");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.NotificationDto", b =>
                {
                    b.Property<long>("notification_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("notification_id"));

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("post_ref")
                        .HasColumnType("bigint");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("user_receiver")
                        .HasColumnType("bigint");

                    b.Property<long>("user_sender")
                        .HasColumnType("bigint");

                    b.HasKey("notification_id");

                    b.ToTable("notifications");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.PasswordRecoveryTokenDto", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<DateTime>("expiring_at")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("user_email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("record_id");

                    b.ToTable("passwordRecoveryTokens");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.PostDto", b =>
                {
                    b.Property<long>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("post_id"));

                    b.Property<string>("body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("likes")
                        .HasColumnType("int");

                    b.Property<long>("post_ref")
                        .HasColumnType("bigint");

                    b.Property<int>("reposts")
                        .HasColumnType("int");

                    b.Property<int>("shares")
                        .HasColumnType("int");

                    b.Property<long>("user_id")
                        .HasColumnType("bigint");

                    b.HasKey("post_id");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.UserConnectionDto", b =>
                {
                    b.Property<long>("connection_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("connection_id"));

                    b.Property<long>("following_user")
                        .HasColumnType("bigint");

                    b.Property<long>("user")
                        .HasColumnType("bigint");

                    b.HasKey("connection_id");

                    b.ToTable("connections");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.UserDto", b =>
                {
                    b.Property<long>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("user_id"));

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("displayname")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("secureKey2fa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("PostItter_RESTfulAPI.Models.DatabaseModels.UserSettingsDto", b =>
                {
                    b.Property<long>("record_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("record_id"));

                    b.Property<bool>("commentNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("darkMode")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("everyoneCanText")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("followNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("likeNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("messageNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("privateProfile")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("replyNotification")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("twoFA")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("user")
                        .HasColumnType("bigint");

                    b.HasKey("record_id");

                    b.ToTable("settings");
                });
#pragma warning restore 612, 618
        }
    }
}
